events {}

http {
    # Define the upstream group
    upstream backend {
        #ip_hash; # Ensures requests from the same client go to the same server
        server whiteboard_one:3000; # Service 1
        server whiteboard_two:3000; # Service 2
    }

    server {
        listen 80;

        # Route all traffic to the backend load balancer
        location / {
            add_header 'Access-Control-Allow-Origin' '*'; # Allow all origins (or specify allowed origin)
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true'; # Allow cookies if needed

                # Handle OPTIONS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Max-Age' 3600;
                return 204; # No content
            }
            proxy_pass http://backend; # Use the upstream group
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}